### fill in all placeholders surrounded by <>

##############################################
# General
##############################################

#unalias q

alias vi='vim' # vim is much nicer :)

alias vialias='        vi ~/.alias'        # opens my alias file
alias sourcealias='    source ~/.alias'    # refresh my aliases

alias -- -=' vim -R - ' # used for viewing a command output in vi, e.g "hg diff file.ext |-"
alias -- --='less'

alias g='     \grep --color -n' # expression coloring and line numbers
alias grep='  grep --color -n'
alias rg='    grep -r'          # recursive grep

alias l='     ls -la --color '
alias ll='    ls -la'

alias fif='        find . -name "*" | xargs grep -l -s '  # find *in* files (-s for suppressing errors)
alias ffind='      find . -name '						  # find files
alias fffind='     find -L . -name '
alias cfind='      ffind "*.[c|h]" | xargs grep -n -s --color ' # -n for line number, -s for suppressing errors

##############################################
# directories
##############################################
alias workspace='  cd ~/workspace'
alias downloads='  cd ~/Downloads'

##############################################
# git functions
##############################################
alias g='    git'
alias gl='   git log'
alias gl1='  git log -1'
alias gl2='  git log -2'
alias gl3='  git log -3'
alias gl4='  git log -4'
alias gls='  git ls'
alias gs='   git status'
alias gss='  git status -s'
alias gsb='  git status -sb'
alias gd='   git diff'
alias gdw='  git diff -w'
alias gdc='  git diff --cached'
alias gdt='  git difftool -d'
alias gds='  git stash show -p stash@{0}'
alias gsd='  git stash show -p stash@{0}'
alias gsl='  git stash list'
alias ga='   git add'
alias gam='  git add `git status -s | grep "MM \| M " | cut -c4-`'
alias gco='  git checkout'
#alias gcm='  git commit'
#alias gcma=' git commit --amend'
#alias gpr='  git pull --rebase'
alias grev=' git co --'
alias gg='   git grep -Enp'
alias gfr='  git fetch && git rebase origin/master'
alias gfetchrebase=' git fetch && git rebase origin/master'
alias gpushu=' git push -u origin `git rev-parse --abbrev-ref HEAD`' # push the current branch and set the remote as upstream


##############################################
# helper functions
##############################################

# Paints the requested expression: ls -l | paint src
function paint()         { sed "s/$1/`echo -e '\033[1;31m'`&`echo -e '\033[0m'`/g"; }
function red()           { sed "s/$1/`echo -e '\033[1;31m'`&`echo -e '\033[0m'`/g"; }
function yellow()        { sed "s/$1/`echo -e '\033[1;33m'`&`echo -e '\033[0m'`/g"; }
function green()         { sed "s/$1/`echo -e '\033[1;32m'`&`echo -e '\033[0m'`/g"; }
function blue()          { sed "s/$1/`echo -e '\033[1;34m'`&`echo -e '\033[0m'`/g"; }

alias col="        tr -s ' ' | cut -d' ' -f"


##############################################
# HG - Mercurial 
##############################################

# $1 - src (cc), $2 - dest (hg)
function rsync_hg()        { rsync -aPc --ignore-errors --exclude="**/.hg*" --delete  $1 $2; }
function nrsync_hg()       { rsync -aPcn --ignore-errors --exclude="**/.hg*" --delete  $1 $2; } # dry run

# $1 - component in hg path
function keep_empty_dirs() { find $1 -type d -empty -exec touch \{\}/.keep_empty_dir \; ; }

# hg status
alias mard="  hg status -mard"
alias Smard=" hg status -Smard"

# patch queue
alias qa="    hg qa" # applied patches
alias qu="    hg qu" # unapplied patches
function vip() { vi ../.hg/patches/$1; }
function lsp() { lsdiff ../.hg/patches/$1; }

