### fill in all placeholders surrounded by <>

##############################################
# General
##############################################

unalias q

alias vi='vim' # vim is much nicer :)

alias vialias='        vi ~/.alias'        # opens my alias file
alias sourcealias='    source ~/.alias'    # refresh my aliases

alias -- -=' vim -R - ' # used for viewing a command output in vi, e.g "hg diff file.ext |-"
alias -- --='less'

alias g='     \grep --color -n' # expression coloring and line numbers
alias grep='  grep --color -n'
alias rg='    grep -r'          # recursive grep

function gsrc()  { grep -rsi $1 ../src ; }  # grep in src directory
function ginc()  { grep -rsi $1 ../inc ; }  # grep in inc directory
function gtest() { grep -rsi $1 ../test ; } # grep in test directory
function gtestd() { grep -rsi $1 ../test/dunash ; } # grep in test/dunash directory

alias l='     ls -la --color '

alias fif='        find . -name "*" | xargs grep -l -s '  # find *in* files (-s for suppressing errors)
alias ffind='      find . -name '						  # find files
alias fffind='     find -L . -name '
alias cfind='      ffind "*.[c|h]" | xargs grep -n -s --color ' # -n for line number, -s for suppressing errors


##############################################
# clear case 
##############################################

alias ct='       cleartool'

alias lsco='     ct lspri -co -short' 	# View / Find check outs
alias cfg='      ct lsstream -fmt "%[found_bls]CXp\n" -cview | sed "s/, /\n/g"' 	# View / List baselines and overrides

alias ci='       ct ci -nc' 			    # Check in the given file
alias ciall='    ct ci -cact -nc' 		# Check in all files from the current activity
alias co='       ct co -nc' 			    # Check out the given file
alias unco='     ct unco -rm' 			  # Undo checkout of the given file
alias uncoall='  ct \unco -cact -rm' 	# Undo all checkouts on current activity

alias rebase='   ct rebase -baseline'   # can get 1 or more baselines: rebase baseline[,baseline]
alias ctcomp='   ct rebase -complete'

alias recommend='ct chstream -cview -rec' # creates a recommended baseline
# for the current stream
alias lsblhistory='{     ct \lsact -fmt "%[versions]Cp\n" | sed "s/, /\n/g" | xargs cleartool describe -fmt "%d %u %Xn\n" ; cleartool lsbl -fmt "%d %u %Xn\n"; }    | sed "s/T/ /" | sed "s/+/ /" | tr -s "     " | cut -d" " -f 1,2,4,5 | sort | red baseline.* | column -t'
# for a specific stream, e.g. lsblhistory-param <stream_name>@/vobs/<VOB_NAME>
function lsblhistory_param() { { ct \lsact -in $1 -fmt "%[versions]Cp\n" | sed "s/, /\n/g" | xargs cleartool describe -fmt "%d %u %Xn\n" ; cleartool lsbl -stream $1 -fmt "%d %u %Xn\n"; }    | sed "s/T/ /" | sed "s/+/ /" | tr -s "     " | cut -d" " -f 1,2,4,5 | sort | red baseline.* | column -t ; }

alias ctdiff='   ct diff -diff'         # use diff format instead of CC diff format
function ctgriff() { ct diff -pred $* | head -3 | tail -2 | cut -f4 -d" " | xargs kdiff3 ; }
# creates a unified formatted patch with all checked out files
function ctudiff() { OUT_DIR=/tmp/'whoami'/diffs ; mkdir -p $OUT_DIR ; OUT_FILE=$OUT_DIR/udiff_`date +%Y-%m-%d_%H-%M-%S`.patch ; /users/'whoami'/scripts/ctudiff.sh > $OUT_FILE ; vi $OUT_FILE ; }

alias lsact='    ct \lsact -fmt "%[owner]p %n\n" -cview  | column -t | paint ".* `ct \lsact -cact -s`"' # activities on CURRENT view
alias mkact='    ct mkact -nc -f' # make new activity

# streams
# Create a child stream under Integration stream, E.g.:
#   mkstream <parent_baseline_name> <new_child_steam_name>
# Where $1 is the baseline that the new stream is based on,
#       $2 is the new child stream name
function mkstream_<component>() { VOB_DIR=/vobs/<VOB_NAME> ; ct mkstream -in <STREAM_NAME>@$VOB_DIR -baseline $1@$VOB_DIR $2@$VOB_DIR; }

# views
# Create a dynamic/snapshot view, e.g.:
#   mkview_srm_dyn <view_tag> <stream_name>
# Where $1 is the view tag/name,
#       $2 is the stream name
function mkview_<component>_dyn()  { ct mkview -tag $1 -stream $2@/vobs/<VOB_NAME> -stgloc <LOCAL_VIEWS_STORAGE_DIR> ; }
function mkview_<component>_snap() { ct mkview -snap -tag $1 -tmode transparent -stre stream:$2@/vobs/<VOB_NAME> -stgloc <LOCAL_VIEWS_STORAGE_DIR> $1 ; }

alias backview=' ct lsco -cview -r -fmt "%E\n#%[type]p\n" | grep -v directory | cut -f1 -d# | xargs tar -czvf ~/BACKVIEW_`date +%Y-%m-%d`_`ct lsview -s -cview`.tgz'

# cd to a stream
function cdview() { cd /view/<VIEW_NAME_PREFIX>_$1/vobs/<VOB_NAME>/<COMPONENT_NAME>/build/; }

# start a CC view
function startview() { ct startview <VIEW_NAME_PREFIX>_$1; }

# view composite baselines
function ccomp() { ct \lsbl -fmt "%[depends_on_closure]Cp\n" $1 | sed "s/, /\n/g" | sort; }

# diff two baselines, outputing the activities that were delivered
function diffbl() {      ct \diffbl -act $1 $2   | \grep ">>\|<<" | \grep -v "deliver\|rebase" | col 1,2; }
function diffbl_pred() { ct \diffbl -pre -act $1 | \grep ">>\|<<" | \grep -v "deliver\|rebase" | col 1,2; }


##############################################
# other tools
##############################################

alias mkcs='     cscope -Rb -s ../inc -s ../src -s ../test '


##############################################
# helper functions
##############################################

# Paints the requested expression: ls -l | paint src
function paint()         { sed "s/$1/`echo -e '\033[1;31m'`&`echo -e '\033[0m'`/g"; }
function red()           { sed "s/$1/`echo -e '\033[1;31m'`&`echo -e '\033[0m'`/g"; }
function yellow()        { sed "s/$1/`echo -e '\033[1;33m'`&`echo -e '\033[0m'`/g"; }
function green()         { sed "s/$1/`echo -e '\033[1;32m'`&`echo -e '\033[0m'`/g"; }
function blue()          { sed "s/$1/`echo -e '\033[1;34m'`&`echo -e '\033[0m'`/g"; }

alias col="        tr -s ' ' | cut -d' ' -f"


##############################################
# HG - Mercurial 
##############################################

# $1 - src (cc), $2 - dest (hg)
function rsync_hg()        { rsync -aPc --ignore-errors --exclude="**/.hg*" --delete  $1 $2; }
function nrsync_hg()       { rsync -aPcn --ignore-errors --exclude="**/.hg*" --delete  $1 $2; } # dry run

# $1 - component in hg path
function keep_empty_dirs() { find $1 -type d -empty -exec touch \{\}/.keep_empty_dir \; ; }

# hg status
alias mard="  hg status -mard"
alias Smard=" hg status -Smard"

# patch queue
alias qa="    hg qa" # applied patches
alias qu="    hg qu" # unapplied patches
function vip() { vi ../.hg/patches/$1; }
function lsp() { lsdiff ../.hg/patches/$1; }

